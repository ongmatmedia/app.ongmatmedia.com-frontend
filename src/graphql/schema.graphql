
# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

scalar AWSDateTime

type BuffViewersLivestream @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: ID!
  user_id: String!
  status: String!
  amount: Int!
  limit_mins: Int!
  uid: String
  name: String
  note: String
  created_time: Long!
  end_time: Long
  first_reported_viewers: Int
  last_reported_viewers: Int
  logs: [BuffViewersLivestreamLog!]
  orders: [BuffViewersLivestreamOrder!]!
}

type BuffViewersLivestreamAllUpdateEvent @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: ID!
  last_reported_viewers: Int
}

input BuffViewersLivestreamAllUpdateEventInput {
  id: ID!
  last_reported_viewers: Int
}

type BuffViewersLivestreamConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [BuffViewersLivestreamEdge!]!
  pageInfo: PageInfo!
}

type BuffViewersLivestreamEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  node: BuffViewersLivestream!
  cursor: String
}

input BuffViewersLivestreamInput {
  id: String!
  amount: Int!
  limit_mins: Int!
  uid: String
  name: String
  note: String
}

type BuffViewersLivestreamLog @aws_api_key @aws_cognito_user_pools @aws_oidc {
  time: Long!
  amount: Float!
}

input BuffViewersLivestreamLogInput {
  time: Long!
  amount: Float!
}

type BuffViewersLivestreamOrder @aws_api_key @aws_cognito_user_pools @aws_oidc {
  from: String!
  time: Long!
  amount: Int!
  limit_mins: Int!
}

type BuffViewersLivestreamStatus @aws_api_key @aws_cognito_user_pools @aws_oidc {
  available_viewers: Int!
  total_viewers: Int!
}

input BuffViewersLivestreamStatusInput {
  available_viewers: Int!
  total_viewers: Int!
}

type BuffViewersLivestreamTaskCUDResponse @aws_api_key @aws_cognito_user_pools @aws_oidc {
  buff: BuffViewersLivestreamEdge!
  me: User!
  payment_history: PaymentHistoryEdge
}

type BuffViewersLivestreamUpdateEvent @aws_api_key @aws_cognito_user_pools @aws_oidc {
  user_id: String!
  id: ID!
  status: String!
  end_time: Long
  first_reported_viewers: Int
  last_reported_viewers: Int
  logs: [BuffViewersLivestreamLog!]
}

input BuffViewersLivestreamUpdateEventInput {
  user_id: String!
  id: ID!
  status: String!
  end_time: Long
  first_reported_viewers: Int
  last_reported_viewers: Int
  logs: [BuffViewersLivestreamLogInput!]
}

type FacebookAccount @aws_api_key @aws_cognito_user_pools @aws_oidc {
  user_id: String!
  id: ID!
  name: String!
  cookie: String
  touch_access_token: String
  livestream_access_token: String
  live: Boolean!
  created_at: Long!
  updated_at: Long!
}

type FacebookAccountConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [FacebookAccountEdge!]!
  pageInfo: PageInfo!
}

type FacebookAccountEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  cursor: String
  node: FacebookAccount!
}

type FacebookAccountInfo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  name: String!
  id: String!
  type: String!
}

input FacebookAccountInput {
  cookie: String
  username: String
  password: String
}

input FacebookAccountUpdateInput {
  live: Boolean
}

type Livestream @aws_api_key @aws_cognito_user_pools @aws_oidc {
  user_id: String!
  id: ID!
  videos: [LivestreamVideo!]!
  name: String!
  active: Boolean!
  status: String!
  created_time: Long!
  updated_time: Long!
  title: String!
  description: String
  times: [Long!]!
  loop_times: Int!
  targets: LivestreamTarget!
  errors: [String!]!
}

type LivestreamConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [LivestreamEdge!]!
  pageInfo: PageInfo!
}

type LivestreamEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  node: Livestream!
  cursor: String
}

type LivestreamFacebookTarget @aws_api_key @aws_cognito_user_pools @aws_oidc {
  uid: String!
  name: String!
  type: String!
  owner: String!
}

input LivestreamFacebookTargetInput {
  uid: String!
  name: String!
  type: String!
  owner: String!
}

input LivestreamInput {
  videos: [LivestreamVideoInput!]!
  name: String!
  times: [Long!]!
  title: String!
  description: String!
  loop_times: Int!
  targets: LivestreamTargetInput!
}

type LivestreamPricing @aws_api_key @aws_cognito_user_pools @aws_oidc {
  p480: Int!
  p720: Int!
  p1080: Int!
}

input LivestreamPricingInput {
  p480: Int!
  p720: Int!
  p1080: Int!
}

input LivestreamQueryFilters {
  active: Boolean!
  created_time: Long!
}

type LivestreamSubscription @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: ID!
  user_id: String!
  quality: Int!
  concurrent_limit: Int!
  end_time: Long!
  playing: Int!
}

input LivestreamSubscriptionInput {
  quality: Int!
  concurrent_limit: Int!
}

type LivestreamSubscriptionUpdateResponse @aws_api_key @aws_cognito_user_pools @aws_oidc {
  livestream_subscription: LivestreamSubscription!
  me: User!
  payment_history: PaymentHistoryEdge
}

type LivestreamTarget @aws_api_key @aws_cognito_user_pools @aws_oidc {
  rtmps: [String!]!
  facebooks: [LivestreamFacebookTarget!]!
}

input LivestreamTargetInput {
  rtmps: [String!]!
  facebooks: [LivestreamFacebookTargetInput!]!
}

input LivestreamUpdateInput {
  user_id: String
  id: ID!
  videos: [LivestreamVideoInput!]
  name: String
  status: String
  active: Boolean
  title: String
  description: String
  times: [Long!]
  loop_times: Int
  targets: LivestreamTargetInput
}

type LivestreamVideo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  title: String!
  is_livestream: Boolean!
  video_id: String!
  thumbnail_url: String!
  url: String!
}

input LivestreamVideoInput {
  title: String!
  is_livestream: Boolean!
  video_id: String!
  thumbnail_url: String!
  url: String!
}

scalar Long

type Mutation @aws_api_key @aws_cognito_user_pools @aws_oidc {
  create_user(price_percent: Int!, email: String!, password: String!, username: String!): UserEdge!
  update_profile(input: UserUpdateInput!): UserEdge!
  update_price_for_user(price: ServicePricingInput!, price_percent: Int!, user_id: String!): User!
  send_money(note: String!, amount: Int!, user_id: String!): SendmoneyResponse!
  set_user_password(password: String!, user_id: String!): Boolean!
  update_buff_viewers_livestream_playing(tasks: [BuffViewersLivestreamAllUpdateEventInput!]!): BuffViewersLivestreamConnection!
  create_buff_viewers_livestream_task(input: BuffViewersLivestreamInput!): BuffViewersLivestreamTaskCUDResponse!
  delete_buff_viewers_livestream_task(id: ID!): BuffViewersLivestreamTaskCUDResponse!
  update_buff_viewers_livestream_task(input: BuffViewersLivestreamUpdateEventInput!): BuffViewersLivestream!
  update_facebook_account(input: FacebookAccountUpdateInput!): FacebookAccount!
  add_facebook_account(input: FacebookAccountInput!): FacebookAccountEdge!
  delete_facebook_account(id: ID!): Boolean!
  update_livestream_subscription(days: Int!, data: LivestreamSubscriptionInput!, user_id: ID): LivestreamSubscriptionUpdateResponse!
  create_livestream(task: LivestreamInput!): LivestreamEdge!
  update_livestream(task: LivestreamUpdateInput!): Livestream!
  delete_livestream(id: ID!): Boolean!
  stop_livestream(id: ID!): Livestream!
  create_deposit(amount: Int!): NewDepositInfo!
  create_notification(input: NotificationInput!): Notification!
  set_notification_read(id: ID!): Notification!
}

type NewDepositInfo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: String!
  time: Long!
  qrcode: String!
  qrdata: String!
}

type Notification @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: ID!
  user_id: String!
  icon: String
  time: AWSDateTime!
  title: String!
  body: String
  ref: String
}

type NotificationConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [NotificationEdge!]!
  pageInfo: PageInfo!
}

type NotificationEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  cursor: String!
  node: Notification!
}

input NotificationInput {
  user_id: String!
  icon: String
  title: String!
  body: String
  ref: String
}

type PageInfo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  endCursor: String
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
}

type PaymentHistory @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: ID!
  time: Long!
  total: Int!
  sender_username: String!
  sender_id: String!
  receiver_username: String
  service: String!
  receiver_id: String
  balance_after: Long!
  note: String!
}

type PaymentHistoryConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [PaymentHistoryEdge!]!
  pageInfo: PageInfo!
}

type PaymentHistoryEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  node: PaymentHistory!
  cursor: String
}

type PaymentMethod @aws_api_key @aws_cognito_user_pools @aws_oidc {
  name: String!
  owner: String!
  description: String!
  account: String!
}

input PaymentMethodInput {
  name: String!
  owner: String!
  description: String!
  account: String!
}

type Query @aws_api_key @aws_cognito_user_pools @aws_oidc {
  me: User!
  pricing: ServicePricing!
  payment_methods: [PaymentMethod!]!
  users(after: String, limit: Int): UserConnection!
  buff_viewers_livestream_tasks(before_time: Long, after: String, first: Int): BuffViewersLivestreamConnection!
  buff_viewers_livestream_playing: BuffViewersLivestreamConnection!
  buff_viewers_livestream_task(id: String!): BuffViewersLivestream!
  buff_viewers_system_status: BuffViewersLivestreamStatus!
  facebook_account_info(url: String!): FacebookAccountInfo!
  facebook_accounts(after: String, limit: Int): FacebookAccountConnection
  facebook_account(id: ID!): FacebookAccount!
  livestream_subscription(user_id: ID): LivestreamSubscription
  livestream_tasks(after: String, limit: Int, filters: LivestreamQueryFilters): LivestreamConnection!
  livestream_task(id: ID!): Livestream!
  payment_histories(first: Int, after: String, before_time: Long): PaymentHistoryConnection!
  video_info(url: String!): VideoInfo!
  notifications(after: String, limit: Int): [NotificationConnection!]!
}

type SendmoneyResponse @aws_api_key @aws_cognito_user_pools @aws_oidc {
  payment_history: PaymentHistoryEdge!
  me: User!
  user: UserEdge!
}

type ServicePricing @aws_api_key @aws_cognito_user_pools @aws_oidc {
  buff_viewers_livestream: Int!
  vip_viewers_livestream: Int!
  livestream: LivestreamPricing!
}

input ServicePricingInput {
  buff_viewers_livestream: Int!
  vip_viewers_livestream: Int!
  livestream: LivestreamPricingInput!
}

type Subscription @aws_api_key @aws_cognito_user_pools @aws_oidc {
  on_update_buff_viewers_livestream_playing: BuffViewersLivestreamConnection
  @aws_subscribe(mutations: ["update_buff_viewers_livestream_playing"])
  on_update_buff_viewers_livestream_task: BuffViewersLivestream
  @aws_subscribe(mutations: ["update_buff_viewers_livestream_task"])
  on_update_livestream(user_id: String!): Livestream
  @aws_subscribe(mutations: ["update_livestream"])
  on_new_notification(user_id: String!): Notification
  @aws_subscribe(mutations: ["create_notification"])
}

type User @aws_api_key @aws_cognito_user_pools @aws_oidc {
  name: String
  phone: String
  username: String!
  email: String
  facebook_uid: String
  admin_page_uid: String
  admin_theme: String
  domain: String
  id: ID!
  balance: Long!
  default_pricing: ServicePricing
  pricing: ServicePricing
  default_price_percent: Int
  price_percent: Int!
  payment_methods: [PaymentMethod!]
  creator_id: String!
  created_at: Long!
  updated_at: Long!
}

type UserConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

type UserEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  cursor: String
  node: User!
}

input UserUpdateInput {
  name: String
  email: String
  phone: String
  facebook_uid: String
  admin_page_uid: String
  admin_theme: String
  payment_methods: [PaymentMethodInput!]
}

type VideoInfo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  title: String!
  description: String!
  id: String!
  livestreaming: Boolean!
  created_time: String!
  duration: Int!
  owner: VideoOwner!
  thumbnail: String!
}

type VideoOwner @aws_api_key @aws_cognito_user_pools @aws_oidc {
  name: String!
  id: String!
  avatar: String!
}

type Root{
  query: Query
}
  