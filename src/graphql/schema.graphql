# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

scalar AWSDateTime

type BuffViewersLivestream @aws_api_key @aws_cognito_user_pools @aws_oidc {
  user_id: String!
  id: ID!
  uid: String!
  name: String!
  note: String!
  amount: Int!
  created_time: Long!
  limit_mins: Int!
}

type BuffViewersLivestreamConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [BuffViewersLivestreamEdge!]!
  pageInfo: PageInfo!
}

type BuffViewersLivestreamEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  node: BuffViewersLivestream!
}

input BuffViewersLivestreamInput {
  id: ID!
  uid: String!
  name: String!
  note: String!
  amount: Int!
  limit_mins: Int!
}

input BuffViewersLivestreamQueryFilters {
  id: TableStringFilterInput!
  amount: TableIntFilterInput!
  created_time: TableIntFilterInput!
}

type BuffViewersLivestreamTaskCUDResponse @aws_api_key @aws_cognito_user_pools @aws_oidc {
  buff: BuffViewersLivestreamEdge!
  me: User!
  payment_history: PaymentHistoryEdge
}

type BuffViewersVideo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  video_id: String!
  title: String!
  uid: Float!
  thumbnail: String!
  note: String!
  amount: Float!
  done: Float!
  created_time: Float!
}

type BuffViewersVideoConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [BuffViewersVideoEdge!]!
  pageInfo: PageInfo!
}

type BuffViewersVideoCUDResponse @aws_api_key @aws_cognito_user_pools @aws_oidc {
  buff: BuffViewersVideoEdge!
  me: User!
  payment_history: PaymentHistoryEdge
}

type BuffViewersVideoEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  node: BuffViewersVideo!
}

input BuffViewersVideoInput {
  video_id: String!
  title: String!
  uid: Float!
  thumbnail: String!
  note: String!
  amount: Float!
}

type FacebookAccount @aws_api_key @aws_cognito_user_pools @aws_oidc {
  user_id: String!
  id: ID!
  name: String!
  cookie: String
  touch_access_token: String
  livestream_access_token: String
  live: Boolean!
  created_at: Long!
  updated_at: Long!
}

type FacebookAccountConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [FacebookAccountEdge!]!
  pageInfo: PageInfo!
}

type FacebookAccountEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  cursor: String
  node: FacebookAccount!
}

type FacebookAccountInfo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  name: String!
  id: String!
  type: String!
}

input FacebookAccountInput {
  cookie: String
  access_token: [String!]
}

type Livestream @aws_api_key @aws_cognito_user_pools @aws_oidc {
  user_id: String!
  id: ID!
  videos: [LivestreamVideo!]!
  name: String!
  active: Boolean!
  status: String!
  created_time: Long!
  updated_time: Long!
  title: String!
  description: String
  time: [Long!]!
  targets: LivestreamTarget!
  errors: [String!]!
}

type LivestreamConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [LivestreamEdge!]!
  pageInfo: PageInfo!
}

type LivestreamEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  node: Livestream!
}

type LivestreamFacebookTarget @aws_api_key @aws_cognito_user_pools @aws_oidc {
  uid: String!
  name: String!
  type: String!
  owner: String!
}

input LivestreamFacebookTargetInput {
  uid: String!
  name: String!
  type: String!
  owner: String!
}

input LivestreamInput {
  videos: [LivestreamVideoInput!]!
  name: String!
  time: [Long!]!
  title: String!
  description: String!
  targets: LivestreamTargetInput!
}

type LivestreamPricing @aws_api_key @aws_cognito_user_pools @aws_oidc {
  p480: Int!
  p720: Int!
  p1080: Int!
}

input LivestreamPricingInput {
  p480: Int!
  p720: Int!
  p1080: Int!
}

input LivestreamQueryFilters {
  active: Boolean!
  created_time: Long!
}

type LivestreamSubscription @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: ID!
  user_id: String!
  quality: Int!
  concurrent_limit: Int!
  end_time: Long!
  playing: Int!
}

input LivestreamSubscriptionInput {
  quality: Int!
  concurrent_limit: Int!
}

type LivestreamSubscriptionUpdateResponse @aws_api_key @aws_cognito_user_pools @aws_oidc {
  livestream_subscription: LivestreamSubscription!
  me: User!
  payment_history: PaymentHistoryEdge
}

type LivestreamTarget @aws_api_key @aws_cognito_user_pools @aws_oidc {
  rtmps: [String!]!
  facebooks: [LivestreamFacebookTarget!]!
}

input LivestreamTargetInput {
  rtmps: [String!]!
  facebooks: [LivestreamFacebookTargetInput!]!
}

input LivestreamUpdateInput {
  id: ID!
  videos: [LivestreamVideoInput!]
  name: String
  active: Boolean
  title: String
  description: String
  time: [Long!]
  targets: LivestreamTargetInput
}

type LivestreamVideo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  title: String!
  is_livestream: Boolean!
  video_id: String!
  thumbnail_url: String!
  url: String!
}

input LivestreamVideoInput {
  title: String!
  is_livestream: Boolean!
  video_id: String!
  thumbnail_url: String!
  url: String!
}

scalar Long

type Mutation @aws_api_key @aws_cognito_user_pools @aws_oidc {
  create_user(price_percent: Int!, email: String!, password: String!, username: String!): UserEdge!
  update_price_for_user(price: ServicePricingInput!, price_percent: Int!, user_id: String!): UserEdge!
  send_money(note: String!, amount: Int!, user_id: String!): SendmoneyResponse!
  set_user_password(password: String!, user_id: String!): Boolean!
  update_info(payment_methods: [PaymentMethodInput!]!, facebook_uid: String!): Boolean!
  create_buff_viewers_livestream_task(input: BuffViewersLivestreamInput!): BuffViewersLivestreamTaskCUDResponse!
  delete_buff_viewers_livestream_task(id: ID!): BuffViewersLivestreamTaskCUDResponse!
  add_facebook_account(input: FacebookAccountInput!): FacebookAccountEdge!
  update_facebook_account(input: FacebookAccountInput!): FacebookAccount!
  delete_facebook_account(id: ID!): Boolean!
  create_vip_viewers_livestream_task(input: VIPViewersLivestreamInput!): VipViewersLivestreamTaskCUDResponse!
  update_vip_viewers_livestream_task(input: VIPViewersLivestreamUpdateInput!): VipViewersLivestreamTaskCUDResponse!
  delete_vip_viewers_livestream_task(id: String!): VipViewersLivestreamTaskCUDResponse!
  update_livestream_subscription(days: Int!, data: LivestreamSubscriptionInput!, user_id: ID): LivestreamSubscriptionUpdateResponse!
  create_livestream(task: LivestreamInput!): LivestreamEdge!
  update_livestream(task: LivestreamUpdateInput!): Livestream!
  delete_livestream(id: ID!): Boolean!
  create_deposit(amount: Int!): NewDepositInfo!
  create_buff_viewers_video_task(input: BuffViewersVideoInput!): BuffViewersVideoCUDResponse!
  delete_buff_viewers_video_task(id: ID!): BuffViewersVideoCUDResponse!
  create_notification(input: NotificationInput!): Notification!
  set_notification_read(id: ID!): Notification!
}

type NewDepositInfo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: String!
  time: Long!
  qrcode: String!
  qrdata: String!
}

type Notification @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: ID!
  user_id: String!
  icon: String
  time: AWSDateTime!
  title: String!
  body: String
  ref: String
}

type NotificationConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [NotificationEdge!]!
  pageInfo: PageInfo!
}

type NotificationEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  cursor: String!
  node: Notification!
}

input NotificationInput {
  user_id: String!
  icon: String
  title: String!
  body: String
  ref: String
}

type PageInfo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  next_token: String
  prev_token: String
}

type PaymentHistory @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: ID!
  time: Long!
  total: Int!
  sender_username: String!
  sender_id: String!
  receiver_username: String
  service: String!
  receiver_id: String
  balance_after: Long!
  note: String!
}

type PaymentHistoryConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [PaymentHistoryEdge!]!
  pageInfo: PageInfo!
}

type PaymentHistoryEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  node: PaymentHistory!
}

type PaymentMethod @aws_api_key @aws_cognito_user_pools @aws_oidc {
  name: String!
  owner: String!
  description: String!
  account: String!
  image_url: String!
  url: String
  qrcode: String
}

input PaymentMethodInput {
  name: String!
  owner: String!
  description: String!
  account: String!
  image_url: String!
  url: String
  qrcode: String
}

type Query @aws_api_key @aws_cognito_user_pools @aws_oidc {
  me: User!
  pricing: ServicePricing!
  payment_methods: [PaymentMethod!]!
  users(after: String, limit: Int): UserConnection!
  buff_viewers_livestream_tasks(after: String, limit: Int, filters: BuffViewersLivestreamQueryFilters): BuffViewersLivestreamConnection!
  buff_viewers_livestream_task(id: ID!): BuffViewersLivestream!
  facebook_account_info(url: String!): FacebookAccountInfo!
  facebook_accounts(after: String, limit: Int): FacebookAccountConnection
  facebook_account(uid: ID!): FacebookAccount!
  vip_viewers_livestream_tasks(after: String, limit: Int, filters: VIPViewersLivestreamQueryFilters): VIPViewersLivestreamConnection!
  vip_viewers_livestream_task(id: String!): VIPViewersLivestream!
  livestream_subscription(user_id: ID): LivestreamSubscription
  livestream_tasks(after: String, limit: Int, filters: LivestreamQueryFilters): LivestreamConnection!
  livestream_task(id: ID!): Livestream!
  payment_histories(after: String, before_time: Long): PaymentHistoryConnection!
  buff_viewers_video_tasks(after: String, limit: Int): BuffViewersVideoConnection!
  video_info(url: String!): VideoInfo!
  notifications(after: String, limit: Int): [NotificationConnection!]!
}

type SendmoneyResponse @aws_api_key @aws_cognito_user_pools @aws_oidc {
  payment_history: PaymentHistoryEdge!
  me: User!
  user: UserEdge!
}

type ServicePricing @aws_api_key @aws_cognito_user_pools @aws_oidc {
  buff_viewers_livestream: Int!
  vip_viewers_livestream: Int!
  livestream: LivestreamPricing!
}

input ServicePricingInput {
  buff_viewers_livestream: Int!
  vip_viewers_livestream: Int!
  livestream: LivestreamPricingInput!
}

type Subscription @aws_api_key @aws_cognito_user_pools @aws_oidc {
  new_notification(user_id: String!): Notification
  @aws_subscribe(mutations: ["create_notification"])
}

input TableBooleanFilterInput {
  ne: Boolean
  eq: Boolean
}

input TableIntFilterInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: Int
}

input TableStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  between: String
}

type User @aws_api_key @aws_cognito_user_pools @aws_oidc {
  username: String!
  email: String!
  facebook_uid: String!
  id: ID!
  balance: Long!
  pricing: ServicePricing
  price_percent: Int!
  payment_methods: [PaymentMethod!]
  creator_id: String!
  created_at: Long!
  updated_at: Long!
}

type UserConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

type UserEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  cursor: String!
  node: User!
}

type VideoInfo @aws_api_key @aws_cognito_user_pools @aws_oidc {
  title: String!
  description: String!
  id: String!
  livestreaming: Boolean!
  created_time: String!
  duration: Int!
  owner: VideoOwner!
  thumbnail: String!
}

type VideoOwner @aws_api_key @aws_cognito_user_pools @aws_oidc {
  name: String!
  id: String!
  avatar: String!
}

type VIPViewersLivestream @aws_api_key @aws_cognito_user_pools @aws_oidc {
  user_id: String!
  id: ID!
  active: Boolean!
  amount: Int!
  bought_mins: Int!
  used_mins: Int!
  note: String!
  name: String!
  histories: [VIPViewersLivestreamHistory!]!
  created_time: Long!
  updated_time: Long!
  auto_disable_after: Float!
  parallel: Float!
}

type VIPViewersLivestreamConnection @aws_api_key @aws_cognito_user_pools @aws_oidc {
  edges: [VIPViewersLivestreamEdge!]!
  pageInfo: PageInfo!
}

type VIPViewersLivestreamEdge @aws_api_key @aws_cognito_user_pools @aws_oidc {
  node: VIPViewersLivestream!
}

type VIPViewersLivestreamHistory @aws_api_key @aws_cognito_user_pools @aws_oidc {
  id: String!
  created_time: Float!
  viewers_count: [Int!]!
  thumbnail: String!
}

input VIPViewersLivestreamInput {
  id: String!
  active: Boolean!
  note: String!
  amount: Int!
  name: String!
  auto_disable_after: Int!
  parallel: Int!
  bought_mins: Int!
}

input VIPViewersLivestreamQueryFilters {
  amount: TableIntFilterInput!
  created_time: TableIntFilterInput!
  end_time: TableIntFilterInput!
}

type VipViewersLivestreamTaskCUDResponse @aws_api_key @aws_cognito_user_pools @aws_oidc {
  vip: VIPViewersLivestreamEdge!
  me: User!
  payment_history: PaymentHistoryEdge
}

input VIPViewersLivestreamUpdateInput {
  id: String!
  active: Boolean
  note: String
  amount: Int
  name: String
  auto_disable_after: Int
  parallel: Int
  bought_mins: Int
}
